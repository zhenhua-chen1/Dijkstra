clc
clear 
close all
%% Sioux Falls Network
% Node=24; % The number of Node; % a=ones(1,Node); %Cij=xlsread('Sioux_Fall.xlsx');
% Sxy=struct('id',a,'fuel',a,'y',a); % Sxy.id=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];
Ca=[10000000,6,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;6,10000000,10000000,10000000,10000000,5,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;4,10000000,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,4,10000000,2,10000000,10000000,10000000,10000000,10000000,6,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,2,10000000,4,10000000,10000000,5,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,5,10000000,10000000,4,10000000,10000000,2,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,2,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,2,3,10000000,10,10000000,10000000,10000000,10000000,10000000,10000000,5,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,5,10000000,10000000,10,10000000,3,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,5,10000000,10000000,10000000,6,4,8,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,6,10000000,10000000,10000000,10000000,10000000,5,10000000,6,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,6,10000000,3,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000,10000000,10000000,5,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,6,10000000,10000000,10000000,5,10000000,10000000,10000000,10000000,3,10000000,10000000,3,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,5,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,2,3,10000000,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,8,10000000,10000000,10000000,10000000,10000000,2,10000000,10000000,2,10000000,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,2,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,10000000,10000000,4,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,2,10000000,10000000,4,10000000,10000000,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,4,10000000,6,5,10000000,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,6,10000000,2,10000000,3;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,10000000,10000000,10000000,5,2,10000000,4,10000000;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000,2;10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,10000000,4,10000000,10000000,10000000,10000000,10000000,10000000,10000000,3,10000000,2,10000000];
o=1;% set the orign;
Cb=Ca;

%% Draw a network diagram with a toolkit and calculate the shortest path
% Cb(Cb==10000000)=0;
% h=view(biograph(Cb,[],'ShowArrows','on','ShowWeights','on'));
% Cb=sparse(Cb);
% [dist,path,pred] = graphshortestpath(Cb,12,24);
% t=24;
tic
% set(h.Nodes(path),'Color',[1 0.4 0.4])
% edges = getedgesbynodeid(h,get(h.Nodes(path),'ID'));
% set(edges,'LineColor',[1 0 0])
% set(edges,'LineWidth',1.5)

%% Calculate the shortest path using the tree-building algorithm
[c,po]=Tree_building(o,Ca);
toc